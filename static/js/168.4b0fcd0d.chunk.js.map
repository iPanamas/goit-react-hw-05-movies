{"version":3,"file":"static/js/168.4b0fcd0d.chunk.js","mappings":"kPACA,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,aAAe,8BAA8B,YAAc,6BAA6B,SAAW,0BAA0B,cAAgB,+BAA+B,cAAgB,gC,mBC8C1R,EAtCgB,WACd,IAAQA,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,6GAEKC,EAAAA,GAAoBP,GAFzB,OAEhBQ,EAFgB,OAGtBJ,EAAWI,GAHW,gDAKtBC,QAAQC,IAAR,MALsB,yDAAH,qDAQvBJ,MACC,CAACN,KAGF,gBAAKW,UAAWC,EAAAA,QAAhB,SACGT,IACC,eAAIQ,UAAWC,EAAAA,YAAf,SACGT,EAAQU,OAAS,EAChBV,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACV,gBAAIL,UAAWC,EAAAA,YAAf,WACE,gBAAID,UAAWC,EAAAA,aAAf,qBAAwCG,MACxC,cAAGJ,UAAWC,EAAAA,YAAd,SAA8BI,MAFGD,OAMrC,eAAIJ,UAAWC,EAAAA,aAAf,2D,0MCpCZK,IAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAU,mCAEHC,EAAiB,mCAAG,oGACRF,IAAAA,IAAA,sCAAyCC,IADjC,cACzBE,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAa,mCAAG,WAAMvB,GAAN,uFACJiB,IAAAA,IAAA,iBAAoBjB,EAApB,oBAAwCkB,IADpC,cACrBE,EADqB,yBAEpBA,EAASC,MAFW,2CAAH,sDAKbG,EAAY,mCAAG,WAAMxB,GAAN,uFACHiB,IAAAA,IAAA,iBACXjB,EADW,4BACiBkB,IAFd,cACpBE,EADoB,yBAInBA,EAASC,KAAKI,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAM1B,GAAN,uFACNiB,IAAAA,IAAA,iBACXjB,EADW,4BACiBkB,IAFX,cACvBE,EADuB,yBAItBA,EAASC,KAAKC,SAJQ,2CAAH,sDAOfK,EAAiB,mCAAG,WAAMC,GAAN,uFACRX,IAAAA,IAAA,iCACKC,EADL,kBACsBU,EADtB,+CADQ,cACzBR,EADyB,yBAIxBA,EAASC,KAAKC,SAJU,2CAAH","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__n3fdK\",\"reviewsItem\":\"Reviews_reviewsItem__Su53A\",\"reviewsTitle\":\"Reviews_reviewsTitle__mxqAS\",\"reviewsText\":\"Reviews_reviewsText__pIre-\",\"notFound\":\"Reviews_notFound__FzYY5\",\"notFoundTitle\":\"Reviews_notFoundTitle__OsTCn\",\"notFoundImage\":\"Reviews_notFoundImage__c-C3a\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\n// Styles\nimport s from './Reviews.module.css';\n\n// API\nimport * as api from 'services/api';\n\nconst Reviews = () => {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const movieReviews = await api.getMovieReviews(moviesId);\n        setReviews(movieReviews);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieReviews();\n  }, [moviesId]);\n\n  return (\n    <div className={s.reviews}>\n      {reviews && (\n        <ul className={s.reviewsList}>\n          {reviews.length > 0 ? (\n            reviews.map(({ author, content }) => (\n              <li className={s.reviewsItem} key={author}>\n                <h2 className={s.reviewsTitle}>Author: {author}</h2>\n                <p className={s.reviewsText}>{content}</p>\n              </li>\n            ))\n          ) : (\n            <h2 className={s.reviewsTitle}>\n              We dont have any reviews for this movie\n            </h2>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b5a4402f376b07e7f2b259d1d47ff1e6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`/movie/${moviesId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByKeyWord = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie/?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["moviesId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","api","movieReviews","console","log","className","s","length","map","author","content","axios","API_KEY","getTrendingMovies","response","data","results","getMoviesById","getMovieCast","cast","getMovieReviews","getMovieByKeyWord","searchQuery"],"sourceRoot":""}