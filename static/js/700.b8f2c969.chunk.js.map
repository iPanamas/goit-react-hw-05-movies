{"version":3,"file":"static/js/700.b8f2c969.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/AdditionalInfo/AdditionalInfo.module.css?0bf0","components/AdditionalInfo/AdditionalInfo.jsx","webpack://react-homework-template/./src/components/BackLink/BackLink.module.css?aa43","components/BackLink/Backlink.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","pages/MovieDetailsPage.jsx","services/api.js","webpack://react-homework-template/./src/pages/Pages.module.css?6bb4"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"info\":\"AdditionalInfo_info__d71xf\",\"infoTitle\":\"AdditionalInfo_infoTitle__1b7yq\",\"infoList\":\"AdditionalInfo_infoList__+hD-v\",\"infoItem\":\"AdditionalInfo_infoItem__4na2c\",\"infoLink\":\"AdditionalInfo_infoLink__9cvJt\"};","// React-router\nimport { NavLink, useParams, useLocation } from 'react-router-dom';\n\n// Styles\nimport s from './AdditionalInfo.module.css';\n\nconst AdditionalInfo = () => {\n  const { moviesId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  return (\n    <div className={s.info}>\n      <h2 className={s.infoTitle}>Additional info</h2>\n      <ul className={s.infoList}>\n        <li className={s.infoItem}>\n          <NavLink\n            className={s.infoLink}\n            to={`/movies/${moviesId}/cast`}\n            state={{ from: backLinkHref }}\n          >\n            Cast\n          </NavLink>\n        </li>\n        <li className={s.infoItem}>\n          <NavLink\n            className={s.infoLink}\n            to={`/movies/${moviesId}/reviews`}\n            state={{ from: backLinkHref }}\n          >\n            Reviews\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AdditionalInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"BackLink_backLink__JiXo7\"};","import { Link } from 'react-router-dom';\n\n// PropTypes\nimport PropTypes from 'prop-types';\n\n// React-icon\nimport { RiReplyAllFill } from 'react-icons/ri';\nimport { IconContext } from 'react-icons';\n\n// Styles\nimport s from './BackLink.module.css';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <Link className={s.backLink} to={to}>\n      <IconContext.Provider value={{ size: '2em', color: 'white' }}>\n        <RiReplyAllFill />\n      </IconContext.Provider>\n      {children}\n    </Link>\n  );\n};\n\nBackLink.propTypes = {\n  children: PropTypes.node.isRequired,\n  to: PropTypes.string.isRequired,\n};\n\nexport default BackLink;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails__image\":\"MovieDetails_movieDetails__image__USA8O\",\"movieDetails\":\"MovieDetails_movieDetails__EqwEX\",\"movieInfo\":\"MovieDetails_movieInfo__XAfDM\",\"movieInfo__title\":\"MovieDetails_movieInfo__title__-awer\",\"genreList\":\"MovieDetails_genreList__Bg3ig\",\"genreItem\":\"MovieDetails_genreItem__A5DKH\"};","// PropTypes\nimport PropTypes, { shape } from 'prop-types';\n\n// Styles\nimport s from './MovieDetails.module.css';\n\nconst MovieDetails = ({ movies }) => {\n  const { id, poster_path, original_title, vote_average, overview, genres } =\n    movies;\n\n  const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n  const DEFAUTL_IMG =\n    'https://www.movienewz.com/wp-content/uploads/2014/07/poster-holder.jpg';\n\n  return (\n    <div className={s.movieDetails} key={id}>\n      <img\n        className={s.movieDetails__image}\n        src={poster_path ? `${BASE_IMG_URL}${poster_path}` : `${DEFAUTL_IMG}`}\n        alt={original_title}\n      />\n      <div className={s.movieInfo}>\n        <h1 className={s.movieInfo__title}>{original_title}</h1>\n        <p className={s.movieInfo__text}>\n          User score: {vote_average.toFixed(1)}\n        </p>\n        <h2 className={s.movieInfo__title}>Overview</h2>\n        <p className={s.movieInfo__text}>{overview}</p>\n        <h2 className={s.movieInfo__title}>Genres</h2>\n        <ul className={s.genreList}>\n          {genres.map(({ id, name }) => (\n            <li className={s.genreItem} key={id}>\n              <p className={s.genreText}>{name}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nMovieDetails.propTypes = {\n  movies: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\nexport default MovieDetails;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\n\n// Toast notification\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Components\nimport AdditionalInfo from '../components/AdditionalInfo/AdditionalInfo';\nimport BackLink from 'components/BackLink/Backlink';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\n\n// Styles\nimport s from './Pages.module.css';\n\n// API\nimport * as api from 'services/api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst MovieDetailsPage = () => {\n  const { moviesId } = useParams();\n  const [movies, setMovies] = useState(null);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n\n    const fetchMovieDetails = async () => {\n      try {\n        const movieDetails = await api.getMoviesById(moviesId);\n\n        if (!movieDetails) {\n          setStatus(Status.IDLE);\n          return;\n        }\n\n        setStatus(Status.RESOLVED);\n        setMovies(movieDetails);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        return toast.error(\n          `Whoops something went wrong, please try again later`\n        );\n      }\n    };\n    fetchMovieDetails();\n  }, [moviesId]);\n\n  return (\n    <>\n      <BackLink to={backLinkHref}>Back</BackLink>\n      {status === Status.IDLE && (\n        <h1 className={s.pagesTitle}>\n          We dont have details from this movie ðŸ˜”\n        </h1>\n      )}\n\n      {status === Status.RESOLVED && <MovieDetails movies={movies} />}\n      {status === Status.RESOLVED && <AdditionalInfo />}\n      {status === Status.RESOLVED && <Outlet />}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b5a4402f376b07e7f2b259d1d47ff1e6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`/movie/${moviesId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByKeyWord = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n  console.log(response);\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"pagesTitle\":\"Pages_pagesTitle__a4WnR\"};"],"names":["moviesId","useParams","backLinkHref","useLocation","state","from","className","s","to","children","value","size","color","movies","id","poster_path","original_title","vote_average","overview","genres","src","alt","toFixed","map","name","Status","useState","setMovies","status","setStatus","useEffect","fetchMovieDetails","api","movieDetails","toast","axios","API_KEY","getTrendingMovies","response","data","results","getMoviesById","getMovieCast","cast","getMovieReviews","getMovieByKeyWord","searchQuery","console","log"],"sourceRoot":""}