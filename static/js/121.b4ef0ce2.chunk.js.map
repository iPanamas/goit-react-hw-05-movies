{"version":3,"file":"static/js/121.b4ef0ce2.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Form/Form.module.css?89ba","components/Form/Form.jsx","webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/SearchMoviePage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchInput\":\"Form_searchInput__X8+62\",\"searchButton\":\"Form_searchButton__nK6j9\",\"searchForm\":\"Form_searchForm__eyCyq\"};","import { useState } from 'react';\n\n// Toast notification\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Styles\nimport s from './Form.module.css';\n\nconst Form = ({ setSearchParams }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChange = event => {\n    setSearchQuery(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    const form = event.currentTarget;\n    event.preventDefault();\n\n    if (searchQuery.toLowerCase().trim() === '') {\n      return toast.info('Please enter movie name ü§¶‚Äç‚ôÇÔ∏è');\n    }\n\n    setSearchParams({ query: form.elements.query.value });\n    setSearchQuery('');\n  };\n\n  return (\n    <form className={s.searchForm} onSubmit={handleSubmit}>\n      <label className={s.searchLabel}>\n        <input\n          name=\"query\"\n          value={searchQuery}\n          className={s.searchInput}\n          type=\"text\"\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.searchButton} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"searchList\":\"SearchMovie_searchList__PBI0X\",\"searchItem\":\"SearchMovie_searchItem__NoZCV\",\"searchLink\":\"SearchMovie_searchLink__Upa88\"};","// React-router\nimport { NavLink } from 'react-router-dom';\n\n// Styles\nimport s from './SearchMovie.module.css';\n\nconst SearchMovie = ({ movies, location }) => {\n  return (\n    <div className={s.search}>\n      <ul className={s.searchList}>\n        {movies.map(({ id, original_title }) => (\n          <li className={s.searchItem} key={id}>\n            <NavLink\n              className={s.searchLink}\n              to={`${id}`}\n              state={{ from: location }}\n            >\n              {original_title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default SearchMovie;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\n\n// Toast notification\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// API\nimport * as api from 'services/api';\n\n// Components\nimport Form from 'components/Form/Form';\nimport SearchMovie from 'components/SearchMovie/SearchMovie';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst SearchMoviePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === null) {\n      return;\n    }\n\n    setStatus(Status.PENDING);\n\n    const fetchMovieByKeyWord = async () => {\n      try {\n        const getMovies = await api.getMovieByKeyWord(query);\n\n        if (getMovies.length === 0) {\n          setStatus(Status.IDLE);\n          return toast.warning(`${query} not found ü§∑‚Äç‚ôÇÔ∏è`);\n        }\n\n        setStatus(Status.RESOLVED);\n        setMovies(getMovies);\n      } catch (error) {\n        setStatus(Status.REJECTED);\n        return toast.error(\n          `Whoops something went wrong, please try again later üôÖ‚Äç‚ôÇÔ∏è`\n        );\n      }\n    };\n    fetchMovieByKeyWord();\n  }, [query]);\n\n  return (\n    <>\n      <Form setSearchParams={setSearchParams} />\n      {status === Status.RESOLVED && (\n        <SearchMovie movies={movies} location={location} />\n      )}\n    </>\n  );\n};\n\nexport default SearchMoviePage;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst API_KEY = 'b5a4402f376b07e7f2b259d1d47ff1e6';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getMoviesById = async moviesId => {\n  const response = await axios.get(`/movie/${moviesId}?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const getMovieCast = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async moviesId => {\n  const response = await axios.get(\n    `/movie/${moviesId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getMovieByKeyWord = async searchQuery => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${searchQuery}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n"],"names":["setSearchParams","useState","searchQuery","setSearchQuery","className","s","onSubmit","event","form","currentTarget","preventDefault","toLowerCase","trim","toast","query","elements","value","name","type","onChange","movies","location","map","id","original_title","to","state","from","Status","setMovies","status","setStatus","useSearchParams","searchParams","useLocation","get","useEffect","fetchMovieByKeyWord","api","getMovies","length","axios","API_KEY","getTrendingMovies","response","data","results","getMoviesById","moviesId","getMovieCast","cast","getMovieReviews","getMovieByKeyWord"],"sourceRoot":""}